((anything status "removed" recipe nil) (auto-complete status "installed" recipe (:name auto-complete :website "http://cx4a.org/software/auto-complete/" :description "The most intelligent auto-completion extension." :type github :pkgname "m2ym/auto-complete" :depends (popup fuzzy))) (auto-complete+ status "installed" recipe (:name auto-complete+ :auto-generated t :type emacswiki :description "Auto complete plus" :website "https://raw.github.com/emacsmirror/emacswiki.org/master/auto-complete+.el")) (auto-complete-etags status "installed" recipe (:name auto-complete-etags :type emacswiki :description "Auto-complete sources for etags" :depends auto-complete)) (auto-indent status "installed" recipe (:name auto-indent :auto-generated t :type emacswiki :description "automatically indent source code" :website "https://raw.github.com/emacsmirror/emacswiki.org/master/auto-indent.el")) (auto-indent-mode status "installed" recipe (:name auto-indent-mode :website "https://github.com/mlf176f2/auto-indent-mode.el" :description "Automatically Indent  when pressing return, pasting, and other customizable features." :type github :pkgname "mlf176f2/auto-indent-mode.el")) (distel status "installed" recipe (:name distel :website "https://github.com/sebastiw/distel/tree/esc" :description "Distributed Emacs Lisp for Erlang." :type github :pkgname "sebastiw/distel" :info "doc" :build (\` (\, (mapcar (lambda (target) (concat "make " target " EMACS=" el-get-emacs)) (quote ("clean" "all"))))) :load-path ("elisp") :features distel)) (ecb status "installed" recipe (:name ecb :description "Emacs Code Browser" :type cvs :module "ecb" :url ":pserver:anonymous@ecb.cvs.sourceforge.net:/cvsroot/ecb" :build (\` (("make" "CEDET=" (\, (concat "EMACS=" (shell-quote-argument el-get-emacs)))))))) (el-get status "removed" recipe nil) (fuzzy status "installed" recipe (:name fuzzy :website "https://github.com/m2ym/fuzzy-el" :description "Fuzzy matching utilities for GNU Emacs" :type github :pkgname "m2ym/fuzzy-el")) (helm status "removed" recipe nil) (icicles status "installed" recipe (:name icicles :auto-generated t :type emacswiki :description "Minibuffer input completion and cycling." :website "https://raw.github.com/emacsmirror/emacswiki.org/master/icicles.el")) (icicles-install status "installed" recipe (:name icicles-install :auto-generated t :type emacswiki :description "Download and optionally byte-compile Icicles " :website "https://raw.github.com/emacsmirror/emacswiki.org/master/icicles-install.el")) (init-anything status "installed" recipe (:name init-anything :auto-generated t :type emacswiki :description "Anything configuration" :website "https://raw.github.com/emacsmirror/emacswiki.org/master/init-anything.el")) (init-icicles status "installed" recipe (:name init-icicles :auto-generated t :type emacswiki :description "Config file for icicles.el" :website "https://raw.github.com/emacsmirror/emacswiki.org/master/init-icicles.el")) (popup status "installed" recipe (:name popup :website "https://github.com/m2ym/popup-el" :description "Visual Popup Interface Library for Emacs" :type github :pkgname "m2ym/popup-el")) (quack status "installed" recipe (:name quack :description "Enhanced support for editing and running Scheme code" :type http :url "http://www.neilvandyke.org/quack/quack.el" :features (quack))) (scheme-complete status "installed" recipe (:name scheme-complete :website "http://synthcode.com/wiki/scheme-complete" :description "Context-sensitive completion for Scheme code." :type http :url "http://synthcode.com/emacs/scheme-complete-0.8.7.el.gz" :build ("gunzip -c scheme-complete-0.8.7.el.gz > scheme-complete.el") :load "scheme-complete.el" :compile "scheme-complete.el" :features "scheme-complete")) (shell-completion status "installed" recipe (:name shell-completion :auto-generated t :type emacswiki :description "provides tab completion for shell commands" :website "https://raw.github.com/emacsmirror/emacswiki.org/master/shell-completion.el")) (yasnippet status "installed" recipe (:name yasnippet :website "https://github.com/capitaomorte/yasnippet.git" :description "YASnippet is a template system for Emacs." :type github :pkgname "capitaomorte/yasnippet" :features "yasnippet" :pre-init (unless (or (boundp (quote yas/snippet-dirs)) (get (quote yas/snippet-dirs) (quote customized-value))) (setq yas/snippet-dirs (list (concat el-get-dir (file-name-as-directory "yasnippet") "snippets")))) :post-init (put (quote yas/snippet-dirs) (quote standard-value) (list (list (quote quote) (list (concat el-get-dir (file-name-as-directory "yasnippet") "snippets"))))) :compile nil :submodule nil)) :el-get "installed" :auto-complete+ "removed" :auto-complete-extension "removed" :auto-complete-yasnippet "removed" :auto-indent "removed" :auto-indent-mode "removed" :quack "installed" :scheme-complete "installed" :shell-command "removed" :shell-command-extension "removed" :shell-command-queue "removed" :shell-completion "removed" :shell-history "removed" :shell-pop "removed" :popup "removed" :auto-complete-etags "removed" :auto-dictionnary "removed" :auto-document "removed" :auto-complete "removed" :fuzzy-match "removed" :distel "installed" :backup-each-save "removed" :init-backup "removed" :folding "removed" :semantic-tag-folding "removed" :w3m-extension "required" :basic-edit-toolkit "removed" :moz-repl "installed")