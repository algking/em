(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ac-auto-show-menu 0.1)
 '(ac-modes (quote (emacs-lisp-mode lisp-mode lisp-interaction-mode slime-repl-mode c-mode cc-mode c++-mode go-mode java-mode malabar-mode clojure-mode clojurescript-mode scala-mode scheme-mode ocaml-mode tuareg-mode coq-mode haskell-mode agda-mode agda2-mode perl-mode cperl-mode python-mode ruby-mode lua-mode ecmascript-mode javascript-mode js-mode js2-mode php-mode css-mode makefile-mode sh-mode fortran-mode f90-mode ada-mode xml-mode sgml-mode ts-mode sclang-mode erlang-mode)))
 '(ansi-color-names-vector ["#242424" "#e5786d" "#95e454" "#cae682" "#8ac6f2" "#333366" "#ccaa8f" "#f6f3e8"])
 '(blink-cursor-mode nil)
 '(c-mode-common-hook (quote ( idle-highlight-mode ac-cc-mode-setup (lambda nil (run-hooks (quote prelude-c-mode-common-hook))))))
 '(cedet-java-jdk-root "/usr/lib/jvm/java-7-openjdk-i386/")
 '(column-number-mode t)
 '(custom-enabled-themes (quote (zenburn)))
 '(custom-safe-themes (quote ("36a309985a0f9ed1a0c3a69625802f87dee940767c9e200b89cdebdb737e5b29" "bf7ed640479049f1d74319ed004a9821072c1d9331bc1147e01d22748c18ebdf" "93815fc47d9324a7761b56754bc46cd8b8544a60fca513e634dfa16b8c761400" "9eadf04efa3cb49960dfed1e4b9cdf4493e5c0b81a81368098dec14310853013" "1eaa502643bd2e379a91a514e69df3e262d85e7e78d6ee623aca7272d4b253c9" default)))
 '(diary-date-forms (quote ((month "/" day "[^/0-9]") (month "/" day "/" year "[^0-9]") (dayname "\\W") (nil "*** " year "-" month "-" day " *"))))
 '(diary-file "~/4399/note/diary.org")
 '(display-time-mode t)
 '(ede-project-directories (quote ("/home/algking/4399/note")))
 '(fci-rule-color "#383838")
 '(global-auto-complete-mode nil)
 '(global-hl-line-sticky-flag nil)
 '(global-semantic-mru-bookmark-mode t)
 '(grep-command "grep -r --exclude-dir=\\.svn -nH -e ")
 '(grep-find-command (quote ("find . -type f -name \"*.erl\" -exec grep -nH -e  {} +" . 48)))
 '(grep-find-ignored-files (quote (".#*" "*.beam" "*.vee" "*.jam" "*.o" "*~" "*.bin" "*.lbin" "*.so" "*.a" "*.ln" "*.blg" "*.bbl" "*.elc" "*.lof" "*.glo" "*.idx" "*.lot" "*.fmt" "*.tfm" "*.class" "*.fas" "*.lib" "*.mem" "*.x86f" "*.sparcf" "*.dfsl" "*.pfsl" "*.d64fsl" "*.p64fsl" "*.lx64fsl" "*.lx32fsl" "*.dx64fsl" "*.dx32fsl" "*.fx64fsl" "*.fx32fsl" "*.sx64fsl" "*.sx32fsl" "*.wx64fsl" "*.wx32fsl" "*.fasl" "*.ufsl" "*.fsl" "*.dxl" "*.lo" "*.la" "*.gmo" "*.mo" "*.toc" "*.aux" "*.cp" "*.fn" "*.ky" "*.pg" "*.tp" "*.vr" "*.cps" "*.fns" "*.kys" "*.pgs" "*.tps" "*.vrs" "*.pyc" "*.pyo" "*.svn")))
 '(grep-find-template "find . <X> -type f <F> -exec grep <C> -nH -e <R> {} +")
 '(haskell-mode-hook (quote (turn-on-haskell-indent turn-on-haskell-indentation turn-on-eldoc-mode turn-on-haskell-doc-mode idle-highlight-mode company-mode)) t)
 '(haskell-stylish-on-save t)
 '(helm-full-frame t)
 '(helm-mode t)
 '(ignoramus-file-basename-exact-names (quote ("$RECYCLE.BIN" ".AppleDouble" ".DS_Store" ".DocumentRevisions-V100" ".LSOverride" ".Rhistory" ".Spotlight-V100" ".TemporaryItems" ".Trashes" ".actionScriptProperties" ".apt_generated" ".build" ".buildpath" ".builds" ".bzr" ".cdv" ".classpath" ".com.apple.timemachine.donotpresent" ".com.apple.timemachine.supported" ".coverage" ".cproject" ".directory" ".dropbox" ".dropbox.cache" ".emacs.desktop" ".emacs.desktop.lock" ".eunit" ".externalToolBuilders" ".flexProperties" ".fseventsd" ".git" ".hg" ".idea" ".ido.last" ".last_cover_stats" ".lein-deps-sum" ".loadpath" ".netrwhist" ".org-id-locations" ".pc" ".project" ".projectile" ".recentf" ".redcar" ".rspec" ".sass-cache" ".scala_dependencies" ".svn" ".tox" ".wmncach.el" ".yardoc" "_MTN" "__history" "_build" "_cgo_defun.c" "_cgo_gotypes.go" "_darcs" "_obj" "_sgbak" "_site" "_test" "_testmain.go" "_yardoc" "aclocal.m4" "auto-save-list" "autom4te.cache" "bin-debug" "bin-release" "blib" "build" "Build" "Build.bat" "COMMIT_EDITMSG" "cmake_install.cmake" "CMakeCache.txt" "CMakeFiles" "cover_db" "cscope.csd" "cscope.files" "cscope.inc" "cscope.lst" "cscope.out" "cscope.out.po" "cscope.tmplist" "CVS" "Debug" "debug" "depcomp" "DerivedData" "Desktop.ini" "ehthumbs.db" "git-rebase-todo" "gwt-unitCache" "gwt_bree" "install-sh" "install_manifest.txt" "InstalledFiles" "Makefile.in" "Makefile.old" "MCVS" "META.yml" "MERGE_MSG" "minimal-session-saver-data.el" "MYMETA.yml" "nbbuild" "nbdist" "nosetests.xml" "nytprof" "nytprof.out" "perltidy.ERR" "pm_to_blib" "Profile" "profile" "RCS" "Release" "release" "SCCS" "Session.vim" "slprj" "SQUASH_MSG" "TAGS" "tags" "TestResult" "testresult" "Thumbs.db" "tmtags" "xcuserdata" "xhtml-loader.rnc" "{arch}" "~.dep" "~.dot" "~.nib" "~.plst" "test.out" "test_out" "test.output" "test_output" ".beam" "ebin")))
 '(jde-jdk-registry (quote (("1.6.0" . "/usr/lib/jvm/java-1.6.0-openjdk") ("1.7.0" . "/usr/lib/jvm/java-1.7.0-openjdk-i386"))))
 '(kept-new-versions 5)
 '(org-agenda-diary-file "~/4399/note/diary.org")
 '(org-agenda-files (quote ("~/4399/note/note.org" "~/4399/note/life.org" "~/4399/note/task.org")))
 '(org-capture-templates (quote (("l" "life schedule" entry (file+datetree "/home/algking/4399/note/life.org") "* TODO %^{Description} Added:%T %^g
  %?") ("n" "笔记" entry (file "/home/algking/4399/note/note.org") "** %^{Note} Added:%T
   %?           ") ("t" "一般的任务" entry (file+datetree "/home/algking/4399/note/task.org") "* TODO %^{Description} Added:%T %^g
  %?"))))
 '(org-mobile-directory "/home/algking/4399/note")
 '(org-mobile-encryption-password "ALG*lin*123")
 '(org-modules (quote (org-bbdb org-bibtex org-docview org-gnus org-habit org-info org-irc org-mhe org-rmail org-w3m)))
 '(org-todo-keywords (quote ((sequence "TODO(t)" "WAIT(w@/!)" "|" "DONE(d!)" "CANCELED(c@)"))))
 '(prelude-whitespace nil)
 '(projectile-tags-command "find . -name \"*.[he]rl\" -print | etags -")
 '(projectile-use-native-indexing nil)
 '(quack-default-program "mit-scheme")
 '(quack-programs (quote ("mzscheme" "bigloo" "csi" "csi -hygienic" "gosh" "gracket" "gsi" "gsi ~~/syntax-case.scm -" "guile" "kawa" "mit-scheme" "racket" "racket -il typed/racket" "rs" "scheme" "scheme48" "scsh" "sisc" "stklos" "sxi")))
 '(safe-local-variable-values (quote ((require-final-newline . t) (emacs-lisp-docstring-fill-column . 75))))
 '(scroll-bar-mode nil)
 '(semantic-java-dependency-system-include-path (quote ("/usr/lib/jvm/java-7-openjdk-common/src")))
 '(semanticdb-javap-classpath (quote ("/usr/lib/jvm/java-7-openjdk-i386/jre/lib/rt.jar")))
 '(server-mode t)
 '(session-use-package t nil (session))
 '(show-paren-mode t)
 '(size-indication-mode t)
 '(tab-width 4)
 '(tags-table-list (quote ("/home/algking/Tools/erl-workspace/server/xxm_server3/xxm_server/TAGS")))
 '(tool-bar-mode nil)
 '(whitespace-global-modes nil)
 '(whitespace-mode nil t)
 '(wrangler-search-paths (quote ("/home/algking/Tools/erl-workspace/mochiweb/")))
 '(yas-snippet-dirs (quote ("/home/algking/.emacs.d/prelude/snippets")) nil (yasnippet)))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:family "Ubuntu Mono" :foundry "unknown" :slant normal :weight normal :height 113 :width normal))))
 '(flymake-errline ((((class color)) (:underline "red"))))
 '(flymake-warnline ((((class color)) (:underline "yellow1"))))
 '(fringe ((t nil))))
